{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-10-25T21:21:35.918Z",
    "end": "2021-10-25T21:22:55.047Z",
    "duration": 79129,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "893773ac-b0e9-4c71-abbd-bf5f891cdc1f",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b329a89-8b22-4fdd-8114-3c336480cc04",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "f627283f-35f7-4bec-b1f8-0b0f1f9bcffb",
              "parentUUID": "8b329a89-8b22-4fdd-8114-3c336480cc04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f627283f-35f7-4bec-b1f8-0b0f1f9bcffb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 226,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 77,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "cadea8f1-d90c-47e6-af9a-fa682829e7c9",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "b899aae3-dd5a-454f-b879-14fad90be14c",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "08af68e7-b6c6-485d-80ea-18c3359bd46c",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "33dda36e-e92d-4ede-90b4-0fdb0f9bd95f",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "4b1f5142-0c37-454e-a497-fc2dc11807b5",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "32508f1b-534b-40a4-b39c-c9afc6613030",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "c73db605-a50c-4301-87fb-2116808a6240",
              "parentUUID": "0b10111d-c8b6-4dd4-b319-757fb70329a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cadea8f1-d90c-47e6-af9a-fa682829e7c9",
            "b899aae3-dd5a-454f-b879-14fad90be14c",
            "08af68e7-b6c6-485d-80ea-18c3359bd46c",
            "33dda36e-e92d-4ede-90b4-0fdb0f9bd95f",
            "4b1f5142-0c37-454e-a497-fc2dc11807b5",
            "32508f1b-534b-40a4-b39c-c9afc6613030",
            "c73db605-a50c-4301-87fb-2116808a6240"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 709,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2606895f-b36a-4eab-8911-4b94ab55cd32",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "654f3cd8-42a3-40fd-8c79-fc338edc8549",
              "parentUUID": "2606895f-b36a-4eab-8911-4b94ab55cd32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "bf3e10cd-f19d-41b8-8d0e-5a62e499c420",
              "parentUUID": "2606895f-b36a-4eab-8911-4b94ab55cd32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "654f3cd8-42a3-40fd-8c79-fc338edc8549",
            "bf3e10cd-f19d-41b8-8d0e-5a62e499c420"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09397478-d0fa-4dd8-9329-114fe5ca4af1",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "edda4077-78f0-4cd6-a7a3-b7a00a207362",
              "parentUUID": "09397478-d0fa-4dd8-9329-114fe5ca4af1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "b45aa16d-5722-4ec7-a579-e08df2953f5f",
              "parentUUID": "09397478-d0fa-4dd8-9329-114fe5ca4af1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "c93a9ba8-33a6-4470-9b37-8d1aa4ff537c",
              "parentUUID": "09397478-d0fa-4dd8-9329-114fe5ca4af1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "b7e45b30-f45c-4b6e-87d5-e8eadfa27ed5",
              "parentUUID": "09397478-d0fa-4dd8-9329-114fe5ca4af1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edda4077-78f0-4cd6-a7a3-b7a00a207362",
            "b45aa16d-5722-4ec7-a579-e08df2953f5f",
            "c93a9ba8-33a6-4470-9b37-8d1aa4ff537c",
            "b7e45b30-f45c-4b6e-87d5-e8eadfa27ed5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c7cf3eaf-89be-49d0-9e9d-efa1ef83adf1",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "517ea27f-0499-4f68-a9fb-51e09d0838c5",
              "parentUUID": "c7cf3eaf-89be-49d0-9e9d-efa1ef83adf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "49409784-234f-4c1c-88f3-e1732d527a81",
              "parentUUID": "c7cf3eaf-89be-49d0-9e9d-efa1ef83adf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "517ea27f-0499-4f68-a9fb-51e09d0838c5",
            "49409784-234f-4c1c-88f3-e1732d527a81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 605,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6769415-ce6a-40da-9e43-64d9c83fbcb7",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "c97762d9-5865-4b5f-ad3a-c55c40f1d303",
              "parentUUID": "d6769415-ce6a-40da-9e43-64d9c83fbcb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "0c3998cb-4c93-4dbb-a761-552a3aab4d03",
              "parentUUID": "d6769415-ce6a-40da-9e43-64d9c83fbcb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c97762d9-5865-4b5f-ad3a-c55c40f1d303",
            "0c3998cb-4c93-4dbb-a761-552a3aab4d03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 139,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3bd0962f-264a-4350-812b-52eeb5f7a287",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 422,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7129c23a-d171-44c9-9797-3e9bb8fb14e4",
              "parentUUID": "3bd0962f-264a-4350-812b-52eeb5f7a287",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8218,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "eed55c1e-a14a-4403-8f6b-53b93e262bf2",
              "parentUUID": "3bd0962f-264a-4350-812b-52eeb5f7a287",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7129c23a-d171-44c9-9797-3e9bb8fb14e4",
            "eed55c1e-a14a-4403-8f6b-53b93e262bf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06cd5c0b-8bcc-4561-ab04-a6e91bbcfdfe",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "d382a644-1074-4968-b803-35acd6ca3780",
              "parentUUID": "06cd5c0b-8bcc-4561-ab04-a6e91bbcfdfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a7ba7536-70f6-480a-8d9b-24c3e007aba8",
              "parentUUID": "06cd5c0b-8bcc-4561-ab04-a6e91bbcfdfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "aaea3712-a577-4dd0-991a-ac106ac6ab78",
              "parentUUID": "06cd5c0b-8bcc-4561-ab04-a6e91bbcfdfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d382a644-1074-4968-b803-35acd6ca3780",
            "a7ba7536-70f6-480a-8d9b-24c3e007aba8",
            "aaea3712-a577-4dd0-991a-ac106ac6ab78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11389,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a92ef6af-e512-4d5b-99e0-d1474f199d0b",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "871c914c-0583-4571-8233-da080f876d26",
              "parentUUID": "a92ef6af-e512-4d5b-99e0-d1474f199d0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "a38a7c8b-1fc2-4c7d-9805-fcdac9efe89f",
              "parentUUID": "a92ef6af-e512-4d5b-99e0-d1474f199d0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "c3199edc-b1a9-4696-b7d6-489378012a03",
              "parentUUID": "a92ef6af-e512-4d5b-99e0-d1474f199d0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "a8ac9d77-2222-4819-b0c8-2eb74ca64b41",
              "parentUUID": "a92ef6af-e512-4d5b-99e0-d1474f199d0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "871c914c-0583-4571-8233-da080f876d26",
            "a38a7c8b-1fc2-4c7d-9805-fcdac9efe89f",
            "c3199edc-b1a9-4696-b7d6-489378012a03",
            "a8ac9d77-2222-4819-b0c8-2eb74ca64b41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2521,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5efbed8b-ae13-424a-ab68-0f1fdec001ce",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4398,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f054cc56-8be2-458a-aa0a-e26115f3562c",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e272b3a1-2eb8-4674-be98-d317d7cceb78",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4369,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4952efdf-2fe4-4a46-a0a0-94a57eb4fdad",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4358,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6caae9f1-32e6-402e-b65f-2a3b2f5ccefa",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4378,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f460b5e5-f3f1-4fa7-80a7-9d195c237776",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7fc334ec-fc30-4c5e-96fb-ab31137ae29d",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5149a007-0554-4a7f-b8a0-57a447e39811",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5d2e587b-c0a2-4839-8d98-2fac9d2e2ac5",
              "parentUUID": "0754e6d5-a33a-44fc-8dd8-3f61d580ae85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5efbed8b-ae13-424a-ab68-0f1fdec001ce",
            "f054cc56-8be2-458a-aa0a-e26115f3562c",
            "e272b3a1-2eb8-4674-be98-d317d7cceb78",
            "4952efdf-2fe4-4a46-a0a0-94a57eb4fdad",
            "6caae9f1-32e6-402e-b65f-2a3b2f5ccefa",
            "f460b5e5-f3f1-4fa7-80a7-9d195c237776",
            "7fc334ec-fc30-4c5e-96fb-ab31137ae29d",
            "5149a007-0554-4a7f-b8a0-57a447e39811",
            "5d2e587b-c0a2-4839-8d98-2fac9d2e2ac5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0ca5b02-6768-48b2-9f65-a8a027d5bf89",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3f846bf2-6594-493c-8ea1-1c4e49822450",
              "parentUUID": "b0ca5b02-6768-48b2-9f65-a8a027d5bf89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4388,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "493ca668-26e5-4a05-a015-e6f7f35a999b",
              "parentUUID": "b0ca5b02-6768-48b2-9f65-a8a027d5bf89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4392,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:51044/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:51044/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:51044/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:51044/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:51044/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:51044/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a1abfa3c-5af8-417d-acb6-c1048b8d5b29",
              "parentUUID": "b0ca5b02-6768-48b2-9f65-a8a027d5bf89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3f846bf2-6594-493c-8ea1-1c4e49822450",
            "493ca668-26e5-4a05-a015-e6f7f35a999b",
            "a1abfa3c-5af8-417d-acb6-c1048b8d5b29"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8d2d6c95-356f-4dcf-83e8-ac09816e4d5d",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:51044/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:51044/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:51044/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:51044/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:51044/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:51044/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:51044/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "d69ce7a8-29ab-4cb2-bb6c-f85a880c9d42",
              "parentUUID": "8d2d6c95-356f-4dcf-83e8-ac09816e4d5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 458,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:51044/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:51044/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:51044/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:51044/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:51044/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:51044/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:51044/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:51044/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:51044/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:51044/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:51044/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:51044/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "609f613d-5203-4fe3-8b34-59f09e921613",
              "parentUUID": "8d2d6c95-356f-4dcf-83e8-ac09816e4d5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d69ce7a8-29ab-4cb2-bb6c-f85a880c9d42",
            "609f613d-5203-4fe3-8b34-59f09e921613"
          ],
          "pending": [],
          "skipped": [],
          "duration": 955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}